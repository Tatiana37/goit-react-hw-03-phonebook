{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Form/Form.module.css","components/Form/Form.js","components/FilterSearch/FilterSearch.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","components/App/App.js","index.js","components/FilterSearch/FilterSearch.module.css"],"names":["module","exports","Form","state","name","number","nameId","shortid","generate","telId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","obj","props","onSubmit","reset","this","className","s","border","form","label","htmlFor","input","id","type","pattern","title","onChange","required","button","Component","FilterSearch","filter","Contact","span","propType","PropTypes","string","isRequired","ContactList","contacts","onDeleteContact","map","contactBtn","onClick","Container","children","container","App","data","handlerInputContacts","some","element","toLowerCase","alert","searchingContacts","target","getVisibleContacts","includes","deleteContact","contactId","prev","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cce7c577.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Contact_span__xkATe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBtn\":\"ContactList_contactBtn__tGW8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Ur6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Form_border__1askm\",\"form\":\"Form_form__3_CzH\",\"label\":\"Form_label__pOCqa\",\"input\":\"Form_input__1tUho\",\"button\":\"Form_button__OJkzg\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = shortid.generate();\n  telId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const obj = {\n      name,\n      number,\n    };\n    this.props.onSubmit(obj);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange, nameId, telId } = this;\n    return (\n      <div className={s.border}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label} htmlFor={name}>\n            Name\n          </label>\n          <input\n            className={s.input}\n            value={name}\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            onChange={handleChange}\n            required\n          />\n          <label className={s.label} htmlFor={number}>\n            Number\n          </label>\n          <input\n            className={s.input}\n            value={number}\n            id={telId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            onChange={handleChange}\n            required\n          />\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './FilterSearch.module.css';\n\nfunction FilterSearch({ filter, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onChange}\n      ></input>\n    </div>\n  );\n}\n\nFilterSearch.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FilterSearch;\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.span}>{name}:</span>\n      <span className={s.span}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport s from './ContactList.module.css';\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.contactBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport Form from '../Form/Form';\nimport FilterSearch from '../FilterSearch/FilterSearch';\nimport ContactList from '../ContactList/ContactList';\nimport Container from '../Container/Container';\nimport data from '../../contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: data,\n    filter: '',\n  };\n\n  handlerInputContacts = data => {\n    const searchingName = this.state.contacts.some(\n      element => element.name.toLowerCase() === data.name.toLowerCase(),\n    );\n\n    if (searchingName) {\n      return alert(`this contact already exists`);\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  searchingContacts = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const {\n      handlerInputContacts,\n      searchingContacts,\n      getVisibleContacts,\n      deleteContact,\n    } = this;\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={handlerInputContacts} />\n        <h2>Contacts</h2>\n        <FilterSearch filter={this.state.filter} onChange={searchingContacts} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterSearch_filter__3RW_x\",\"label\":\"FilterSearch_label__3LwGT\",\"input\":\"FilterSearch_input__31Xd9\"};"],"sourceRoot":""}